syntax = 'proto3';

package github.com.io.toucasoft.accounty.v1;

option go_package = "users/v1";
import "google/api/annotations.proto";

// User in the system
message User {
  // Id of the user
  int64 id = 1;
  // Username
  string username = 2;
  // Name
  string name = 3;
  // Password
  string password = 4;
  // e-mail
  string email = 5;
}

// User Managemenet Services
// Handles users in the system
service UserManagementService {
  // Creates a new User in the system
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user"
    };
  }

  // List the users in the system
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  // Get an existing users 
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  // Updates an existing users 
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/{id}"
      body: "user"
    };
  }

  // Deletes an existing user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }
}

// CreateUserRequest
message CreateUserRequest {
  // User to create
  User user = 1;
}

// CreateUserResponse
message CreateUserResponse {
  // Created user
  User user = 1;
}

// ListUsersRequest is a request for listing users
message ListUsersRequest {
}

// ListUsersResponse contains the list of users found
message ListUsersResponse {
  repeated User users = 1;
}

// GetUserRequest is a request for getting an existing user
message GetUserRequest {
  // Id of the user
  int64 id = 1;
}

// GetUserResponse contains the response with an existing user
message GetUserResponse {
  // Found user
  User user = 1;
}

// UpdateUserRequest is a request for updating an existing user
message UpdateUserRequest {
  // Id of the user
  int64 id = 1;
  // User to update
  User user = 2;
}

// UpdateUserResponse contains the response with the updated user
message UpdateUserResponse {
  // Updated user
  User user = 1;
}

// DeleteUserRequest is a request for deleteing an existing user
message DeleteUserRequest {
  // Id of the user
  int64 id = 1;
}

// DeleteUserResponse contains the response of the delete operation
message DeleteUserResponse {
}